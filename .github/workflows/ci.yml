name: CI

on:
  #when pull-request created to develop run workflow
  pull_request:
    branches: [ develop, master ]
  #when pushed to develop run workflow
  push:
    branches: [ develop, master ]
env:
  REGISTRY: home.nexus.com:8085
  IMAGE: thanujtk/react-app

jobs:
  build:
    runs-on: [ self-hosted ]
    env:
      SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
      SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 2
      - name: Cache node_modules
        uses: actions/cache@v2.1.6
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use NodeJS
        uses: actions/setup-node@v2.1.5
        with:
          node-version: "12.x"
      - run: npm ci
      #- run: npm run format:check
      - run: npm test -- --coverage
        env:
          CI: true
      - name: Upload Test Coverage As Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: test-coverage
          path: coverage
      - name: Build Project
        if: github.event_name == 'push'
        run: |
          npm run build
      - name: Upload Build Artifact
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v2.2.4
        with:
          name: build-artifact
          path: build

      - name: ZIP Release of Assets
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          zip -r build-artifact.zip ./build
          zip -r test-coverage.zip ./coverage
      #      - uses: actions/download-artifact@v2.0.10
      - name: Create a release
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{secrets.MYGITHUB_TOKEN}}
      - name: Deploy to Staging
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        run: npx surge --project ./build --domain thanujtk.surge.sh
        # Above needs surge token,  defined at jobs level as environment variable
      - name: Deploy to Production
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: npx surge --project ./build --domain thanujtk.surge.sh
        # Above needs surge token,  defined at jobs level as environment variable
      #      - name: Docker Login Using Docker CLI
      #        id: login-dockerhub
      #        run: |
      #          echo ${{ secrets.DOCKERHOME_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Docker Tag
        id: dockertag
        run: |
          DTAG=$(git rev-list --tags --max-count=1)
          echo "Latest Tag Commit-ID = $DTAG"
          TVER=$(git describe --tags $DTAG)
          echo "Last Tag Version = $TVER"
          echo "::set-output name=IMAGE_TAG::${TVER}-$(git rev-list --tags --max-count=1 | head -c8)"
        shell: bash
      # Build image with above created tag
      - name: Build Docker Image
        run: |
          npm run build
          docker build . -t ${{ env.REGISTRY }}/${{env.IMAGE}}:${{ steps.dockertag.outputs.IMAGE_TAG }}

      #login if it is only master release, also using docker-cli as shown above
      - name: Docker Login
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        id: login-dockerhome
        uses: docker/login-action@v1.10.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHOME_USERNAME }}
          password: ${{ secrets.DOCKERHOME_TOKEN }}
      #push image if it is master release
      - name: Docker push
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          echo "Pusing to registry ${{ env.REGISTRY }} for image ${{env.IMAGE}}:${{ steps.dockertag.outputs.IMAGE_TAG }}"
          docker push ${{ env.REGISTRY }}/${{env.IMAGE}}:${{ steps.dockertag.outputs.IMAGE_TAG }}
      #logout from docker
      - name: Docker Logout
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          docker logout ${{ env.REGISTRY }}
          echo "Image Tag is = ${{ steps.dockertag.outputs.IMAGE_TAG }}"

      #https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions


